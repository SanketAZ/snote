spring.application.name=snote
server.port=1718

# Data base
spring.datasource.url=jdbc:postgresql://localhost:5432/snote
spring.datasource.username=postgres
spring.datasource.password=root
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.generate_statistics=false

#GitHub Oauth
spring.security.oauth2.client.registration.github.client-id=Ov23limHHYXaF8Ep3CZ6
spring.security.oauth2.client.registration.github.client-secret=9d4dc9820905096ffbdf4a220f2ff4c061d78e52
spring.security.oauth2.client.registration.github.scope=user

jwt.rsa-private-key=classpath:certs/privateKey.pem
jwt.rsa-public-key=classpath:certs/publicKey.pem


#Image Directory
file.upload-dir=C:/Users/Sanket/OneDrive/Desktop/snoteImages/

#Multipart File
spring.servlet.multipart.enabled=true
spring.servlet.multipart.file-size-threshold=2KB
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=50MB

logging.level.org.springframework.security=DEBUG

# Keycloak Server Configuration used to create keycloak obj.
keycloak.auth-server-url=http://localhost:8081
keycloak.realm=master
keycloak.resource=admin-cli
keycloak.credentials.secret=WG0Ono4HzdCotQJskrMivuGohjKKknE1

# Keycloak Admin User (Optional - for Admin Client)
keycloak.admin.username=admin
keycloak.admin.password=admin

# Spring Security Keycloak Adapter
keycloak.use-resource-role-mappings=true
keycloak.bearer-only=false

# Keycloak Configuration for Spring Security
#keycloak.security-constraints[0].authRoles=admin,user
#keycloak.security-constraints[0].securityCollections[0].patterns=/api/*
keycloak.cors=true
client.roles=USER ADMIN USER_READ USER_DELETE USER_WRITE

# Keycloak configuration for OAuth2 client used in default setting like for decoder
spring.security.oauth2.client.registration.keycloak.client-id=snote-application
spring.security.oauth2.client.registration.keycloak.scope=openid
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8081/realms/myrealm

# Keycloak configuration for resource server
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8081/realms/myrealm

# Elasticsearch related config
spring.elasticsearch.uris=http://localhost:9200
spring.elasticsearch.username=elastic
spring.elasticsearch.password=jTL23z7UcAblD_2iLFRx